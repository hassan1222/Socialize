{"ast":null,"code":"import axios from 'axios';\nimport { SIGNUP_SUCCESS, SIGNUP_FAIL, SIGNIN_SUCCESS, SIGNIN_FAIL, LOGOUT } from './types';\nexport const signup = formData => async dispatch => {\n  try {\n    // Create a FormData object\n    const data = new FormData();\n    for (const key in formData) {\n      data.append(key, formData[key]);\n    }\n    const res = await axios.post('http://localhost:5000/api/users/signup', data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: error.response.data.message || 'Signup failed'\n    });\n  }\n};\nexport const signin = userData => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:5000/api/auth/signin', userData);\n    dispatch({\n      type: SIGNIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SIGNIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","SIGNUP_SUCCESS","SIGNUP_FAIL","SIGNIN_SUCCESS","SIGNIN_FAIL","LOGOUT","signup","formData","dispatch","data","FormData","key","append","res","post","headers","type","payload","error","response","message","signin","userData","logout"],"sources":["D:/socialmedia/auth-frontend/src/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  SIGNIN_SUCCESS,\r\n  SIGNIN_FAIL,\r\n  LOGOUT\r\n} from './types';\r\n\r\nexport const signup = (formData) => async (dispatch) => {\r\n  try {\r\n    // Create a FormData object\r\n    const data = new FormData();\r\n    for (const key in formData) {\r\n      data.append(key, formData[key]);\r\n    }\r\n\r\n    const res = await axios.post('http://localhost:5000/api/users/signup', data, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n      payload: error.response.data.message || 'Signup failed'\r\n    });\r\n  }\r\n};\r\n\r\nexport const signin = (userData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('http://localhost:5000/api/auth/signin', userData);\r\n    dispatch({\r\n      type: SIGNIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SIGNIN_FAIL,\r\n      payload: error.response.data.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,MAAM,QACD,SAAS;AAEhB,OAAO,MAAMC,MAAM,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACF;IACA,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3B,KAAK,MAAMC,GAAG,IAAIJ,QAAQ,EAAE;MAC1BE,IAAI,CAACG,MAAM,CAACD,GAAG,EAAEJ,QAAQ,CAACI,GAAG,CAAC,CAAC;IACjC;IAEA,MAAME,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,wCAAwC,EAAEL,IAAI,EAAE;MAC3EM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFP,QAAQ,CAAC;MACPQ,IAAI,EAAEf,cAAc;MACpBgB,OAAO,EAAEJ,GAAG,CAACJ;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPQ,IAAI,EAAEd,WAAW;MACjBe,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACV,IAAI,CAACW,OAAO,IAAI;IAC1C,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAIC,QAAQ,IAAK,MAAOd,QAAQ,IAAK;EACtD,IAAI;IACF,MAAMK,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,uCAAuC,EAAEQ,QAAQ,CAAC;IAC/Ed,QAAQ,CAAC;MACPQ,IAAI,EAAEb,cAAc;MACpBc,OAAO,EAAEJ,GAAG,CAACJ;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPQ,IAAI,EAAEZ,WAAW;MACjBa,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACV,IAAI,CAACW;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMG,MAAM,GAAGA,CAAA,KAAOf,QAAQ,IAAK;EACxCA,QAAQ,CAAC;IAAEQ,IAAI,EAAEX;EAAO,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}